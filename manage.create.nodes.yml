---
# running this inside droplet causes issues with ssh key
# need to map ssh key from host to container

- name: Create droplet
  hosts:
   - localhost
  vars_prompt:
  # - name: swarm_name
  #   prompt: What is the name of your swarm
  #   private: no
  #   default: production
    - name: node_count
      prompt: 'How many nodes to add'
      private: no
      default: 3
    - name: tags
      prompt: 'Comma seperated list of tags e.g. (foo,bar,baz)'
      private: no
      default: "harden_required"
  roles:
    - name: dodroplet
      dodroplet_node_count: "{{node_count}}"
      dodroplet_tags: "{{ tags.split(',') }}"
  post_tasks:
    - name: Wait a minute for the nodes to come up
      wait_for:
        timeout: 60

- name: Refresh inventory
  hosts:
    - localhost
  tasks:
    - meta: refresh_inventory

- name: Secure the droplet
  hosts:
    - harden_required
  gather_facts: false
  vars:
    - ansible_ssh_user: root
  pre_tasks:
  - name: install python 2
    raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
  roles:
    - role: securenode
      ansible_user: root
      users: "{{ ssh_users }}"
      server_type: "swarm"
    - role: domonitoring
      tags: ['monitoring']
      become: yes
    - role: geerlingguy.pip
      tags: ['install_docker']
      become: yes
  post_tasks:
    - name: Get tagged resources
      uri:
        url: https://api.digitalocean.com/v2/droplets?tag_name=harden_required
        headers:
          Content-Type: "application/json"
          Authorization: "Bearer {{digital_ocean_token}}"
      register: hardened_droplets

    - name: Remove tag
      uri:
        url: https://api.digitalocean.com/v2/tags/harden_required/resources
        method: DELETE
        headers:
          Content-Type: "application/json"
          Authorization: "Bearer {{digital_ocean_token}}"
        body:
          resources:
            - resource_id: "{{item.id}}"
              resource_type: "droplet"
        body_format: json
        status_code: 204
      with_items: "{{hardened_droplets.json.droplets}}"


